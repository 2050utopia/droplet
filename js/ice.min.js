/*! ice-editor 2013-12-27 */
(function(){var Block,BlockEndToken,BlockStartToken,NewlineToken,RecomputeState,Socket,TextToken,Token,lispParse,__hasProp={}.hasOwnProperty,__extends=function(child,parent){function ctor(){this.constructor=child}for(var key in parent)__hasProp.call(parent,key)&&(child[key]=parent[key]);return ctor.prototype=parent.prototype,child.prototype=new ctor,child.__super__=parent.prototype,child};RecomputeState=function(){function RecomputeState(){this.stack={next:null,data:null}}return RecomputeState.prototype.first=function(){return this.stack.data},RecomputeState.prototype.push=function(element){return this.stack={next:this.stack,data:element}},RecomputeState.prototype.pop=function(){var removed;return removed=this.stack,this.stack=this.stack.next,removed},RecomputeState}(),Block=function(){function Block(contents){var head,token,_i,_len;for(this.start=new BlockStartToken(this),head=this.start,_i=0,_len=contents.length;_len>_i;_i++)token=contents[_i],head.next=token.clone(),head.next.previous=head,head=head.next;head.next=this.end,this.end=new BlockEndToken(this)}return Block.prototype.contents=function(){var contents,head;for(contents=[],head=this.start;head!==this.end;)contents.push(head),head=head.next;return contents.push(this.end),contents},Block.prototype.lines=function(){var contents,currentLine,head;for(contents=[],currentLine=[],head=this.start;head!==this.end;)contents.push(head),"newline"===head.type&&(contents.push(currentLine),currentLine=[]),head=head.next;return currentLine.push(this.end),contents.push(currentLine),contents},Block.prototype._moveTo=function(parent){return null!=this.start.prev&&(this.start.prev.next=this.end.next),null!=this.end.next&&(this.end.next.prev=this.start.prev),this.end.next=parent.next,parent.next.prev=this.end,parent.next=this.start,this.start.prev=parent},Block.prototype.recompute=function(){},Block.prototype.find=function(f){var head;for(head=this.start.next;head!==this.end;){if("blockStart"===head.type&&f(head.block))return head.block.find(f);head=head.next}return this},Block.prototype.toString=function(){var string;return string=this.start.toString(),string.slice(0,+(string.length-this.end.toString().length-1)+1||9e9)},Block}(),Token=function(){function Token(){this.prev=this.next=null}return Token.prototype.insert=function(token){return null!=this.next&&(this.next.prev=token),token.prev=this,this.next=token},Token.prototype.recompute=function(state){return null!=this.next?this.next.recompute(state):void 0},Token.prototype.toString=function(){return null!=this.next?this.next.toString():""},Token}(),TextToken=function(_super){function TextToken(value){this.value=value,this.prev=this.next=null}return __extends(TextToken,_super),TextToken.prototype.toString=function(){return this.value+(null!=this.next?this.next.toString():"")},TextToken}(Token),BlockStartToken=function(_super){function BlockStartToken(block){this.block=block,this.prev=this.next=null,this.type="blockStart"}return __extends(BlockStartToken,_super),BlockStartToken.prototype.recompute=function(state){return state.push(),null!=this.next?this.next.recompute(state):void 0},BlockStartToken}(Token),BlockEndToken=function(_super){function BlockEndToken(block){this.block=block,this.prev=this.next=null,this.type="blockEnd"}return __extends(BlockEndToken,_super),BlockEndToken.prototype.recompute=function(){return state.pop(),this.block.recompute(state),null!=this.next?this.next.recompute(state):void 0},BlockEndToken}(Token),NewlineToken=function(_super){function NewlineToken(){this.prev=this.next=null}return __extends(NewlineToken,_super),NewlineToken.prototype.toString=function(){return"\n"+(this.next?this.next.toString():"")},NewlineToken}(Token),Socket=function(_super){function Socket(accepts){this.accepts=accepts,this.value=this.prev=this.next=null,this.type="socket"}return __extends(Socket,_super),Socket.prototype.toString=function(){return(null!=this.value?this.value.toString():"")+(null!=this.next?this.next.toString():"")},Socket}(Token),lispParse=function(str){var block,block_stack,char,currentString,first,head,_i,_len;for(currentString="",first=head=new TextToken(""),block_stack=[],_i=0,_len=str.length;_len>_i;_i++)switch(char=str[_i]){case"(":head=head.insert(new TextToken(currentString)),block_stack.push(block=new Block([])),head=head.insert(block.start),head=head.insert(new TextToken("(")),currentString="";break;case")":head=head.insert(new TextToken(currentString)),head=head.insert(new TextToken(")")),head=head.insert(block_stack.pop().end),currentString="";break;case" ":head=head.insert(new TextToken(currentString)),head=head.insert(new TextToken(" ")),currentString="";break;case"\n":head=head.insert(new TextToken(currentString)),head=head.insert(new NewlineToken),currentString="";break;default:currentString+=char}return head=head.insert(new TextToken(currentString)),first},window.ICE={lispParse:lispParse}}).call(this);